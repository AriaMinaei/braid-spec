Internet-Draft                                                 M. Toomim
Expires: Mar 8, 2020                                   Invisible College
Intended status: Proposed Standard                           X. Yourname
                                                        Your Affiliation
                                                             Nov 4, 2019

         Braid-Patch: a General Format for Mergeable Operations
                    draft-ietf-httbis-braid-patch-00

Abstract

  A uniform syntax for expressing changes to state.  Allows re-use of
  existing synchronization algorithms and Content-Types.

  Supports arbitrary CRDT or OT algorithms, and most Content-Types.



Status of this Memo

  This Internet-Draft is submitted in full conformance with the
  provisions of BCP 78 and BCP 79.
  
  Internet-Drafts are working documents of the Internet Engineering Task
  Force (IETF), its areas, and its working groups.  Note that other
  groups may also distribute working documents as Internet-Drafts.  The
  list of current Internet-Drafts is at
  http://datatracker.ietf.org/drafts/current/.

  Internet-Drafts are draft documents valid for a maximum of six months
  and may be updated, replaced, or obsoleted by other documents at any
  time.  It is inappropriate to use Internet-Drafts as reference
  material or to cite them other than as "work in progress."

  The list of current Internet-Drafts can be accessed at
  https://www.ietf.org/1id-abstracts.html

  The list of Internet-Draft Shadow Directories can be accessed at
  https://www.ietf.org/shadow.html



Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . . 3
   2.  Parse-As   . . . . . . . . . . . . . . . . . . . . . . . . .  18
   3.  Merge-As
   4.  Partially-Ordered Content
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  23
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  23
   8.  Copyright Notice  . . . . . . . . . . . . . . . . . . . . . .  23
   9.  Author's Address  . . . . . . . . . . . . . . . . . . . . . .  23



1.  Introduction

  Even though there are many synchronization algorithms, making
  different tradeoffs, with different network protocols, it turns out
  that they all need to communicate roughly the same thing -- we can
  re-express their network messages in a single format.

  Braid-Patch is a uniform syntax for changes to state.  Any change is
  expressed in the form:

          "region X of the data was replaced with content Y"

  Synchronization algorithms can be difficult to implement, but the
  Braid-Patch format lets you re-use an algorithm over multiple
  Content-Types.  To do this, you specify (1) how to PARSE REGIONS from
  the data structure, and (2) how multiple conflicting patches are
  MERGED.

  A Braid-Patch is *composed* of a Parser and a Merger.  The Parser
  specifies how to index into subregions of the Content-Type, and the
  Merger specifies how simultaneous patches to the same state are
  merged.

  For instance, here is a patch specification for binary files:

       braid(bytes, sync9(array))
              ^           ^
              |           |
         (1) Parse as    (2) Merge as

  This specifies to (1) interpret a Content-Type as a linear sequence of
  bytes, and to (2) *merge* simultaneous patches using the sync9(array)
  specification.

  Here is a patch following that specification:

       [33:3889] = <binary-data>

  Here is a patch specification for JSON files:

       braid(json, sync9(json))
              ^           ^
              |           |
         (1) Parse as    (2) Merge as

  This specifies to interpret a file as JSON, and merge it using sync9's
  JSON type.

1.  The Parse-As parameter

2.  The Merge-As parameter

3.  Partially-Ordered Content

