Internet-Draft                                                 M. Toomim
Expires: Mar 8, 2020                                   Invisible College
Intended status: Proposed Standard                        M. Milutinovic
                                                             UC Berkeley
                                                             Nov 4, 2019

                             Range Patch
                  draft-xx-httpbis-range-patch-00.txt

Abstract

   A uniform approach for expressing changes to state over HTTP.



Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering Task
   Force (IETF), its areas, and its working groups.  Note that other
   groups may also distribute working documents as Internet-Drafts.  The
   list of current Internet-Drafts is at
   http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   https://www.ietf.org/1id-abstracts.html

   The list of Internet-Draft Shadow Directories can be accessed at
   https://www.ietf.org/shadow.html



Table of Contents

   1. Introduction ....................................................1
   2. Range Patch .....................................................2
      2.1. Stand-Alone Range Patch ....................................3
   3. Range Units .....................................................4
      3.1. JSON Range Unit ............................................5
   4. IANA Considerations .............................................6
      4.1. Range Unit Registrations ...................................7
   5. Security Considerations .........................................8
   6. Conventions .....................................................9
   7. Copyright Notice ...............................................10
   8. References .....................................................11
      8.1. Normative References ......................................12
      8.2. Informative References ....................................13



1.  Introduction

   This documents describes a uniform approach for expressing changes to
   state over HTTP.  It builds upon [RFC7233] and details how patches
   can be defined using range units, ranges, and content.  Any patch is
   expressed in the form:

     "range X in units Y of the data was replaced with content Z"

   Range units define how original content (being patched) should be
   parsed to obtain a region of the content which is being patched, and
   then how that region is replaced with new content.

2.  Range Patch

   [RFC7233] effectively already defines how a patch operating on byte
   units can be represented over HTTP, using Content-Range,
   Content-Type, and Content-Length HTTP headers. Example:

     HTTP/1.1 206 Partial Content
     Date: Wed, 15 Nov 1995 06:25:24 GMT
     Last-Modified: Wed, 15 Nov 1995 04:58:08 GMT
     Content-Range: bytes 21010-47021/47022
     Content-Length: 26012
     Content-Type: image/gif

     ... 26012 bytes of partial image data ...

   The same approach can be used to describe a range inside content
   interpreted not as bytes, but, for example, as JSON [RFC8259]
   structure.  We define such JSON range unit in Section 4.1.  Example:

     HTTP/1.1 206 Partial Content
     Date: Thu, 31 Oct 2019 07:51:08 GMT
     Last-Modified: Thu, 18 Oct 2019 17:44:39 GMT
     Content-Range: json /foo/bar/3/baz
     Content-Length: 22
     Content-Type: application/json

     {"1": {"two": "tree"}}

   Where full example JSON document operated on could be:

     {"foo": {"bar": [
       {"some": "thing"},
       {"no": "thing"},
       {"mo": "re"},
       {"baz": {"1": {"two": "tree"}}}
     ]}}

   Similarly, when issuing a PATCH request to a resource, a range patch
   can be provided using Range header field:

     PATCH /api/image/1 HTTP/1.1
     Host: example.com
     Range: bytes=21010-47021
     Content-Length: 26012
     Content-Type: image/gif

     ... 26012 bytes of new partial image data ...

   And for JSON:

     PATCH /api/document/1 HTTP/1.1
     Host: example.com
     Range: json=/foo/bar/3/baz
     Content-Length: 25
     Content-Type: application/json

     {"2": {"three": "flour"}}

   Server MUST NOT ignore the Range header field when used with a PATCH
   request.

2.1.  Stand-Alone Range Patch

   When range patches are transmitted outside of HTTP session, a stand-alone
   range patch format can be used.  For example, in this format it can be
   stored in a file.  The format reuses structure from HTTP and consists
   of headers separated from the patch body by an empty line. Only
   Content-Range header is required. Example:

     Content-Range: json /foo/bar/3/baz

     {"1": {"two": "tree"}}

   Additional headers can be provided.

3.  Range Units

   Range units define how content is parsed into a structure. They
   define a corresponding range specification which is a string
   describing range under the unit.

   Different range units can be compatible with content expresses
   through different media types.

   Bytes range unit is already specified in [RFC7233].

3.1.  JSON Range Unit

   JSON range unit operates on JSON and JSON-compatible data structures.
   Its range specification is based on JSON pointer as described in
   [RFC6901].  The content of the range MUST always be a valid JSON
   by itself.

5.  Security Considerations

   Both GET and PATCH requests using a range patch are potentially
   susceptible to denial-of-service attacks because the effort required
   to compute the patch or apply the patch.



6.  Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

7.  Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of the
   Trust Legal Provisions and are provided without warranty as described
   in the Simplified BSD License.

8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC7233]  Fielding, R., Lafon, Y., and J. Reschke, "Hypertext
              Transfer Protocol (HTTP/1.1): Range Requests", RFC 7233,
              June 2014.

   [RFC6901]  Bryan, P., Zyp, K., and M. Nottingham, "JavaScript Object
              Notation (JSON) Pointer", RFC 6901, April 2013.

8.2.  Informative References

   [RFC8259]  T. Bray, "The JavaScript Object Notation (JSON) Data
              Interchange Format", RFC 8259, December 2017.

Authors' Addresses

   For more information, the authors of this document are best contacted
   via Internet mail:

   Michael Toomim
   Invisible College, Berkeley
   2053 Berkeley Way
   Berkeley, CA 94704

   EMail: toomim@gmail.com
   Web:   https://invisible.college/@toomim


   Mitar Milutinovic
   UC Berkeley, EECS Department
   775 Soda Hall #1776
   Berkeley, CA 94720-1776

   EMail: mitar.ietf@tnode.com
   Web:   https://mitar.tnode.com/
