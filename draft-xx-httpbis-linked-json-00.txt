Internet-Draft                                                 M. Toomim
Expires: Mar 8, 2020                                   Invisible College
Intended status: Proposed Standard                           X. Yourname
                                                        Your Affiliation
                                                             Nov 4, 2019


                              Linked JSON
                   draft-toomim-httbis-linked-json-00

Abstract

  Linked JSON is an extension to JSON that defines a new datatype: a
  "Link".  A Link has a URI, and may have metadata.

  Links allow JSON objects to compose across websites, supporting
  transclusion.  Optional metadata on links can be used to specify a
  specific version or sub-slice of data to link to.



Status of this Memo

  This Internet-Draft is submitted in full conformance with the
  provisions of BCP 78 and BCP 79.
  
  Internet-Drafts are working documents of the Internet Engineering Task
  Force (IETF), its areas, and its working groups.  Note that other
  groups may also distribute working documents as Internet-Drafts.  The
  list of current Internet-Drafts is at
  http://datatracker.ietf.org/drafts/current/.

  Internet-Drafts are draft documents valid for a maximum of six months
  and may be updated, replaced, or obsoleted by other documents at any
  time.  It is inappropriate to use Internet-Drafts as reference
  material or to cite them other than as "work in progress."

  The list of current Internet-Drafts can be accessed at
  https://www.ietf.org/1id-abstracts.html

  The list of Internet-Draft Shadow Directories can be accessed at
  https://www.ietf.org/shadow.html




1.  Introduction

  JSON documents often include URIs, or references to other documents,
  as strings.  It is often useful to distinguish which strings actually
  represent URIs, for example, to fetch and include the contents of
  links, or to translate relative to absolute URIs.

  Linked JSON is an extension of JSON that adds a Link datatype, so that
  URIs can be distinguished from ordinary strings.

1.1  Syntax

  A Link is encoded as a JSON object with a field named "link":

     { "link": "/david-macaulay" }

  Any object with a field named "link" is interpreted as a Link.  The
  value of the link field MUST be a string containing a URI [RFC3986].

  Links MAY be embedded within arbitrary JSON:

     {
       "book-name": "The way things work",
       "image"      { "link": "/the-way-things-work.jpg" },
       "author":    { "link": "/david-macaulay" }
     }

1.2.  Escaping

  To encode a field named "link" *without* creating a Link, prefix the
  field with an underscore:

     {"_link": "this is not a link"}

  To encode "_link", prefix it with two underscores: "__link".  To
  encode "__link", use "___link", and so on.

1.3.  Metadata

  Links MAY specify metadata on other fields of the JSON object.

  For instance, a "version" field could be used to specify a specific
  version to link to:
  
     {
       "message": "Hey guys! I just published a new draft!",
       "attachment: {
         "link": "/books/the-way-things-work",
         "version": "4.0.5"
       }
     }

  The metadata in [RFC5988] could also be expressed.

  Or a graphql query:

    {"link": "/foo", "slice": "(bar:9)[3,4]"}
  

3.  Related Work

  A number of related formats are surveyed in:
  https://www.mnot.net/blog/2011/11/25/linking_in_json.html

  This draft borrows from draft-pbryan-zyp-json-ref-03, but makes the
  following changes:

    - It names the special field "link" instead of "$ref"
    - It provides an escape hatch for when users need to encode the
      string "link"
    - It allows metadata to be specified on Links
    - The contents of a link need not be JSON

  This enables software to automatically differentiate Links from
  strings.  Software could then automatically fetch, cache, and
  transclude the author object into the book object, for instance, or
  transform the relative link to absolute.
       
  JSON-LD also suppoorts linking in JSON, but bundles a number of other
  features as well, making it more difficult to implement.
  



4.  Resolution

   Resolution of a Link SHOULD yield the referenced value.

   If the URI contained in the JSON Reference value is a relative URI,
   then the base URI resolution MUST be calculated according to
   [RFC3986], section 5.2.  Resolution is performed relative to the
   referring document.


5.  Media Type

   Linked JSON resources MAY use the media type:

      Content-Type: application/Linked-JSON



5.  Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

6. Security Considerations

  XXX fill this in

7. IANA Considerations

   This draft includes no request to IANA.

8. Copyright Notice

  Copyright (c) 2019 IETF Trust and the persons identified as the
  document authors.  All rights reserved.

  This document is subject to BCP 78 and the IETF Trust's Legal
  Provisions Relating to IETF Documents
  (http://trustee.ietf.org/license-info) in effect on the date of
  publication of this document.  Please review these documents
  carefully, as they describe your rights and restrictions with respect
  to this document.  Code Components extracted from this document must
  include Simplified BSD License text as described in Section 4.e of the
  Trust Legal Provisions and are provided without warranty as described
  in the Simplified BSD License.


9. Author's Address

  Michael Toomim
  Invisible College, Berkeley
  2053 Berkeley Way
  Berkeley, CA 94704

  Email: toomim@gmail.com
  Web:   https://invisible.college/@toomim
